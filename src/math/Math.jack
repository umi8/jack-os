class Math {

    static Array twoToThe;

    function void init() {
        let twoToThe = Array.new(16);
        let twoToThe[0] = 1;
        let twoToThe[1] = 2;
        let twoToThe[2] = 4;
        let twoToThe[3] = 8;
        let twoToThe[4] = 16;
        let twoToThe[5] = 32;
        let twoToThe[6] = 64;
        let twoToThe[7] = 128;
        let twoToThe[8] = 256;
        let twoToThe[9] = 512;
        let twoToThe[10] = 1024;
        let twoToThe[11] = 2048;
        let twoToThe[12] = 4096;
        let twoToThe[13] = 8192;
        let twoToThe[14] = 16384;
        let twoToThe[15] = 32767 + 1;
        return;
    }

    function int abs(int x) {
        if (0 > x) {
            return -x;
        } else {
            return x;
        }
    }

    function int multiply(int x, int y) {

        var int sum, shiftedX, j;

        if ((x = 0) | (y = 0)) {
            return 0;
        }

        let sum = 0;
        let shiftedX = x;
        let j = 0;

        while (j < 16) {
            if (Math.bit(y, j)) {
                let sum = sum + shiftedX;
            }
            let shiftedX = shiftedX + shiftedX;
            let j = j + 1;
        }

        return sum;
    }

    function int divide(int x, int y) {
        var int q, sign;

        if (y = 0) {
            return 0;
        }

        let sign = 1;

        if (x < 0) {
            let x = Math.abs(x);
            let sign = Math.multiply(sign, -1);
        }

        if (y < 0) {
            let y = Math.abs(y);
            let sign = Math.multiply(sign, -1);
        }

        if (y > x) {
            return 0;
        }

        let q = Math.divide(x, 2 * y);

        if (x - (2 * q * y) < y) {
            return 2 * q * sign;
        } else {
            return 2 * q * sign + 1;
        }
    }

    function int min(int x, int y) {
        if (x < y) {
            return x;
        } else {
            return y;
        }
    }

    function int max(int x, int y) {
        if (x < y) {
            return y;
        } else {
            return x;
        }
    }

    function int sqrt(int x) {
        var int y, j, n, tmp;
        var boolean isFoundN;

        let n = 0;
        let j = 0;
        let isFoundN = false;
        while ((~isFoundN) & (n < 16)) {
            if (x < twoToThe[n]) {
                let isFoundN = true;
            } else {
                let n = n + 1;
            }
        }

        let y = 0;
        let j = Math.divide(n, 2) - 1;
        while (j > -1) {
            let tmp = Math.multiply(y + twoToThe[j], y + twoToThe[j]);
            if (((tmp < x) | (tmp = x)) & (tmp > 0)) {
                let y = y + twoToThe[j];
            }
            let j = j - 1;
        }

        return y;
    }

    function boolean bit(int x, int j) {
        return x & twoToThe[j];
    }
}
